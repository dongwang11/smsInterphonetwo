package com.sms.app.framework.dao.bean.commom;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.sms.app.framework.dao.bean.Customer;
import com.sms.app.framework.dao.bean.DAOApplyMsg;
import com.sms.app.framework.dao.bean.DAOFriend;
import com.sms.app.framework.dao.bean.DAOGroup;
import com.sms.app.framework.dao.bean.DAOmember;
import com.sms.app.framework.dao.bean.DAOMesg;
import com.sms.app.framework.dao.bean.DAOPoint;
import com.sms.app.framework.dao.bean.DAOTrajectory;
import com.sms.app.framework.dao.bean.DAOUser;
import com.sms.app.framework.dao.bean.Order;

import com.sms.app.framework.dao.bean.commom.CustomerDao;
import com.sms.app.framework.dao.bean.commom.DAOApplyMsgDao;
import com.sms.app.framework.dao.bean.commom.DAOFriendDao;
import com.sms.app.framework.dao.bean.commom.DAOGroupDao;
import com.sms.app.framework.dao.bean.commom.DAOmemberDao;
import com.sms.app.framework.dao.bean.commom.DAOMesgDao;
import com.sms.app.framework.dao.bean.commom.DAOPointDao;
import com.sms.app.framework.dao.bean.commom.DAOTrajectoryDao;
import com.sms.app.framework.dao.bean.commom.DAOUserDao;
import com.sms.app.framework.dao.bean.commom.OrderDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig customerDaoConfig;
    private final DaoConfig dAOApplyMsgDaoConfig;
    private final DaoConfig dAOFriendDaoConfig;
    private final DaoConfig dAOGroupDaoConfig;
    private final DaoConfig dAOmemberDaoConfig;
    private final DaoConfig dAOMesgDaoConfig;
    private final DaoConfig dAOPointDaoConfig;
    private final DaoConfig dAOTrajectoryDaoConfig;
    private final DaoConfig dAOUserDaoConfig;
    private final DaoConfig orderDaoConfig;

    private final CustomerDao customerDao;
    private final DAOApplyMsgDao dAOApplyMsgDao;
    private final DAOFriendDao dAOFriendDao;
    private final DAOGroupDao dAOGroupDao;
    private final DAOmemberDao dAOmemberDao;
    private final DAOMesgDao dAOMesgDao;
    private final DAOPointDao dAOPointDao;
    private final DAOTrajectoryDao dAOTrajectoryDao;
    private final DAOUserDao dAOUserDao;
    private final OrderDao orderDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        customerDaoConfig = daoConfigMap.get(CustomerDao.class).clone();
        customerDaoConfig.initIdentityScope(type);

        dAOApplyMsgDaoConfig = daoConfigMap.get(DAOApplyMsgDao.class).clone();
        dAOApplyMsgDaoConfig.initIdentityScope(type);

        dAOFriendDaoConfig = daoConfigMap.get(DAOFriendDao.class).clone();
        dAOFriendDaoConfig.initIdentityScope(type);

        dAOGroupDaoConfig = daoConfigMap.get(DAOGroupDao.class).clone();
        dAOGroupDaoConfig.initIdentityScope(type);

        dAOmemberDaoConfig = daoConfigMap.get(DAOmemberDao.class).clone();
        dAOmemberDaoConfig.initIdentityScope(type);

        dAOMesgDaoConfig = daoConfigMap.get(DAOMesgDao.class).clone();
        dAOMesgDaoConfig.initIdentityScope(type);

        dAOPointDaoConfig = daoConfigMap.get(DAOPointDao.class).clone();
        dAOPointDaoConfig.initIdentityScope(type);

        dAOTrajectoryDaoConfig = daoConfigMap.get(DAOTrajectoryDao.class).clone();
        dAOTrajectoryDaoConfig.initIdentityScope(type);

        dAOUserDaoConfig = daoConfigMap.get(DAOUserDao.class).clone();
        dAOUserDaoConfig.initIdentityScope(type);

        orderDaoConfig = daoConfigMap.get(OrderDao.class).clone();
        orderDaoConfig.initIdentityScope(type);

        customerDao = new CustomerDao(customerDaoConfig, this);
        dAOApplyMsgDao = new DAOApplyMsgDao(dAOApplyMsgDaoConfig, this);
        dAOFriendDao = new DAOFriendDao(dAOFriendDaoConfig, this);
        dAOGroupDao = new DAOGroupDao(dAOGroupDaoConfig, this);
        dAOmemberDao = new DAOmemberDao(dAOmemberDaoConfig, this);
        dAOMesgDao = new DAOMesgDao(dAOMesgDaoConfig, this);
        dAOPointDao = new DAOPointDao(dAOPointDaoConfig, this);
        dAOTrajectoryDao = new DAOTrajectoryDao(dAOTrajectoryDaoConfig, this);
        dAOUserDao = new DAOUserDao(dAOUserDaoConfig, this);
        orderDao = new OrderDao(orderDaoConfig, this);

        registerDao(Customer.class, customerDao);
        registerDao(DAOApplyMsg.class, dAOApplyMsgDao);
        registerDao(DAOFriend.class, dAOFriendDao);
        registerDao(DAOGroup.class, dAOGroupDao);
        registerDao(DAOmember.class, dAOmemberDao);
        registerDao(DAOMesg.class, dAOMesgDao);
        registerDao(DAOPoint.class, dAOPointDao);
        registerDao(DAOTrajectory.class, dAOTrajectoryDao);
        registerDao(DAOUser.class, dAOUserDao);
        registerDao(Order.class, orderDao);
    }
    
    public void clear() {
        customerDaoConfig.clearIdentityScope();
        dAOApplyMsgDaoConfig.clearIdentityScope();
        dAOFriendDaoConfig.clearIdentityScope();
        dAOGroupDaoConfig.clearIdentityScope();
        dAOmemberDaoConfig.clearIdentityScope();
        dAOMesgDaoConfig.clearIdentityScope();
        dAOPointDaoConfig.clearIdentityScope();
        dAOTrajectoryDaoConfig.clearIdentityScope();
        dAOUserDaoConfig.clearIdentityScope();
        orderDaoConfig.clearIdentityScope();
    }

    public CustomerDao getCustomerDao() {
        return customerDao;
    }

    public DAOApplyMsgDao getDAOApplyMsgDao() {
        return dAOApplyMsgDao;
    }

    public DAOFriendDao getDAOFriendDao() {
        return dAOFriendDao;
    }

    public DAOGroupDao getDAOGroupDao() {
        return dAOGroupDao;
    }

    public DAOmemberDao getDAOmemberDao() {
        return dAOmemberDao;
    }

    public DAOMesgDao getDAOMesgDao() {
        return dAOMesgDao;
    }

    public DAOPointDao getDAOPointDao() {
        return dAOPointDao;
    }

    public DAOTrajectoryDao getDAOTrajectoryDao() {
        return dAOTrajectoryDao;
    }

    public DAOUserDao getDAOUserDao() {
        return dAOUserDao;
    }

    public OrderDao getOrderDao() {
        return orderDao;
    }

}
